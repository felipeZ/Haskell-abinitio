{"name":"Haskell-abinitio","tagline":"contains a package in Haskell to calculate the electronic structure properties of molecules using the Hartree-Fock method","body":"### Joining two worlds\r\nHaskell and its underlying theory have made us ask ourself some irresistible ques-\r\ntions:  have those equations written in the piece of paper the same mathematical\r\nmeaning  of  those  that  we  have  implemented  in  Fortran?   If  programming  is  as\r\nmuch mathematical as it is artistic creation, then why are we still working with\r\nsuch twisted and ugly ideas?  You ask the same questions to your workmates and\r\nprofessors, and after while working locked in your o\u000Ece, you will \fnd out that an\r\nangry mob of Fortran programmers is waiting outside.  After all, you dared to say\r\nthat a pure and lazy functional language is the future of programming in science!\r\n\r\n### The Hartree-Fock Method\r\nThis package can calculate the Hartree Fock energy of a given molecule geometry and a basis set solving the Roothaan Hall equations through a self consistent field procedure. It uses the Harris Functional as an initial density guess and the DIIS method to greatly improve the convergence. The entire code is written using the[Repa](https://hackage.haskell.org/package/repa) library and focusing our efforts on efficiency, parallelism and code readability. Using Haskellâ€™s higher order abstraction we are trying to develop an EDSL appropriate for quantum mechanics problems, creating code operators able to fairly mimic the physical ones.\r\nThe original idea of the project can be found at [Haskell ab initio](https://themonadreader.files.wordpress.com/2013/03/issue214.pdf)\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}